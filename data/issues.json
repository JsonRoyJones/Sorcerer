{
  "total_count": 283,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10974",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10974/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10974/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10974/events",
      "html_url": "https://github.com/vuejs/vue/issues/10974",
      "id": 544784843,
      "node_id": "MDU6SXNzdWU1NDQ3ODQ4NDM=",
      "number": 10974,
      "title": "Declarative debouncing with proper dependency tracking",
      "user": {
        "login": "mitar",
        "id": 585279,
        "node_id": "MDQ6VXNlcjU4NTI3OQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mitar",
        "html_url": "https://github.com/mitar",
        "followers_url": "https://api.github.com/users/mitar/followers",
        "following_url": "https://api.github.com/users/mitar/following{/other_user}",
        "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mitar/subscriptions",
        "organizations_url": "https://api.github.com/users/mitar/orgs",
        "repos_url": "https://api.github.com/users/mitar/repos",
        "events_url": "https://api.github.com/users/mitar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mitar/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-01-02T23:05:16Z",
      "updated_at": "2020-01-02T23:10:10Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### What problem does this feature solve?\r\nIf one wants to debounce recomputation when state changes too often, [documentation offers an approach with watching](https://vuejs.org/v2/guide/computed.html#Watchers). This approach has a major limitations though: it is imperative and thus not compossible very well (when multiple state fields are used). One has to know manually which reactive sources `getAnswer` uses and then setup watchers for each of the reactive fields manually. If code of `getAnswer` changes to use more of the state, watchers have to be updated as well. If `getAnswer` is really complicated (which is the main purpose of debouncing, a complicated and expensive function), calling potentially into other functions, it is not always clear what all state it is using.\r\n\r\n### What does the proposed API look like?\r\nIdeally, debouncing throttling of expensive computed fields would be integrated with Vue reactivity enginge. Such computed property would:\r\n* Run the computation once, detect which reactive dependencies the computation uses.\r\n* When dependencies change, instead of scheduling computation to be re-run immediately, it would be queued with additional metadata: the timestamp only after which it should be run from the queue. For debouncing, new dependency changes would push further down the queue existing re-run entry (while keeping the timestamp in the future). For throttling, logic would just have to prevent re-adding an existing entry to the queue (I think this is already the case, so it would work out; we would just have to not run the entry before the timeout).\r\n* So current queue processing would just have to be changed so that entries which timeouts in the future are skipped when going over the queue. Leaving them for future queue processing to process them. In a way we would make the queue not be just a FIFO queue.\r\n\r\nHow we expose this to the developers, not sure, maybe we could expand on the [getter/setter syntax of the computed fields](https://vuejs.org/v2/guide/computed.html#Computed-Setter), and add also some fields for debounce/throttling options.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10973",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10973/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10973/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10973/events",
      "html_url": "https://github.com/vuejs/vue/issues/10973",
      "id": 544519911,
      "node_id": "MDU6SXNzdWU1NDQ1MTk5MTE=",
      "number": 10973,
      "title": "Should `fill` and `copyWithIn` methods be intercepted (observed) now ?",
      "user": {
        "login": "zjffun",
        "id": 25266120,
        "node_id": "MDQ6VXNlcjI1MjY2MTIw",
        "avatar_url": "https://avatars2.githubusercontent.com/u/25266120?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zjffun",
        "html_url": "https://github.com/zjffun",
        "followers_url": "https://api.github.com/users/zjffun/followers",
        "following_url": "https://api.github.com/users/zjffun/following{/other_user}",
        "gists_url": "https://api.github.com/users/zjffun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zjffun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zjffun/subscriptions",
        "organizations_url": "https://api.github.com/users/zjffun/orgs",
        "repos_url": "https://api.github.com/users/zjffun/repos",
        "events_url": "https://api.github.com/users/zjffun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zjffun/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        },
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2020-01-02T10:18:37Z",
      "updated_at": "2020-01-02T12:48:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\n`fill` and `copyWithIn` methods are also mutating methods and has Standard status currently [ECMAScript 2015 Language Specification – ECMA-262 6th Edition - copywithin](https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.copywithin) , but they aren't being intercepted in https://github.com/vuejs/vue/blob/237294d88f65d65dcb790246394f1d37d64856a0/src/core/observer/array.js#L11-L19. Should they join now ? \r\n\r\n### What does the proposed API look like?\r\nnull\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10968",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10968/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10968/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10968/events",
      "html_url": "https://github.com/vuejs/vue/issues/10968",
      "id": 544323808,
      "node_id": "MDU6SXNzdWU1NDQzMjM4MDg=",
      "number": 10968,
      "title": "serverPrefetch rejection with no value creates broken response",
      "user": {
        "login": "dsanders11",
        "id": 5820654,
        "node_id": "MDQ6VXNlcjU4MjA2NTQ=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/5820654?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dsanders11",
        "html_url": "https://github.com/dsanders11",
        "followers_url": "https://api.github.com/users/dsanders11/followers",
        "following_url": "https://api.github.com/users/dsanders11/following{/other_user}",
        "gists_url": "https://api.github.com/users/dsanders11/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dsanders11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dsanders11/subscriptions",
        "organizations_url": "https://api.github.com/users/dsanders11/orgs",
        "repos_url": "https://api.github.com/users/dsanders11/repos",
        "events_url": "https://api.github.com/users/dsanders11/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dsanders11/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2020-01-01T07:28:57Z",
      "updated_at": "2020-01-01T17:27:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[http://sorry-no-can-do.com](Sorry, I don't have time to setup a reproduction case for SSR, that's not a 5 minute thing).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Use SSR\r\n2. Add a `serverPrefetch` with `return Promise.reject()`\r\n\r\n### What is expected?\r\nAn error to occur due to the rejection in `serverPrefetch`\r\n\r\n### What is actually happening?\r\nNo error occurs, but the rendered result will not contain the component with the bad `serverPrefetch`.\r\n\r\n---\r\nCurrently, rejecting a promise in `serverPrefetch` with no value will create a broken response from SSR. By broken I mean that no error will occur with `renderToString`, so it looks like it was successful, but the rendered DOM may be missing components, including the root component all together.\r\n\r\nThis is because the rejection value from `serverPrefetch` is wired straight through to the `done` callback on `render`, but that callback only considers an error to have occurred if a value is provided. Due to this straight wiring, any `serverPrefetch` which rejects without a value will allow rendering to continue, but will skip the rendering of the component on which the error occurs. If that's the root component, the rendered result has no element for hydration to use in the rendered result, which means there's no way for the client to recover. For a real-life example of this, see vuejs/vue-apollo#901.\r\n\r\nHere's the relevant code, the `done` callback for `render`:\r\n\r\nhttps://github.com/vuejs/vue/blob/42fdf3f8378e5dc379808a4fa67b39c4a74ae191/src/server/create-renderer.js#L84-L87\r\n\r\nAnd where the rejection value from `serverPrefetch` is wired through:\r\n\r\nhttps://github.com/vuejs/vue/blob/42fdf3f8378e5dc379808a4fa67b39c4a74ae191/src/server/render.js#L65\r\n\r\nA fix could be as easy as expanding that `catch` to check for `err` and provide a default value if one is not provided. I'm punting on what that default would be, so I'm opening this as an issue rather than a PR.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10966",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10966/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10966/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10966/events",
      "html_url": "https://github.com/vuejs/vue/issues/10966",
      "id": 543902585,
      "node_id": "MDU6SXNzdWU1NDM5MDI1ODU=",
      "number": 10966,
      "title": "Add line number and a snippet of the source template to template render error reports",
      "user": {
        "login": "davidkhess",
        "id": 184167,
        "node_id": "MDQ6VXNlcjE4NDE2Nw==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/184167?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidkhess",
        "html_url": "https://github.com/davidkhess",
        "followers_url": "https://api.github.com/users/davidkhess/followers",
        "following_url": "https://api.github.com/users/davidkhess/following{/other_user}",
        "gists_url": "https://api.github.com/users/davidkhess/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davidkhess/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davidkhess/subscriptions",
        "organizations_url": "https://api.github.com/users/davidkhess/orgs",
        "repos_url": "https://api.github.com/users/davidkhess/repos",
        "events_url": "https://api.github.com/users/davidkhess/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davidkhess/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-12-30T14:42:40Z",
      "updated_at": "2019-12-30T21:25:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nIt helps developers pinpoint template errors in larger templates.\r\n\r\nAt the moment, render errors look like this (from version 2.5.18):\r\n\r\n```\r\nvue.js:616 [Vue warn]: Error in render: \"TypeError: Cannot read property 'name' of undefined\"\r\n\r\nfound in\r\n\r\n---> <ASelectDate>\r\n       <ALite>\r\n         <TransitionGroup>\r\n           <DbNavigation>\r\n             <VContent>\r\n               <VApp>\r\n                 <Root>\r\nwarn @ vue.js:616\r\nlogError @ vue.js:1824\r\nglobalHandleError @ vue.js:1819\r\nhandleError @ vue.js:1808\r\nVue._render @ vue.js:4637\r\nupdateComponent @ vue.js:2893\r\nget @ vue.js:3261\r\nWatcher @ vue.js:3250\r\nmountComponent @ vue.js:2900\r\nVue.$mount @ vue.js:8642\r\nVue.$mount @ vue.js:11045\r\ninit @ vue.js:4225\r\ncreateComponent @ vue.js:5696\r\ncreateElm @ vue.js:5643\r\naddVnodes @ vue.js:5824\r\nupdateChildren @ vue.js:5951\r\npatchVnode @ vue.js:6037\r\npatch @ vue.js:6198\r\nVue._update @ vue.js:2775\r\nupdateComponent @ vue.js:2893\r\nget @ vue.js:3261\r\nrun @ vue.js:3336\r\nflushSchedulerQueue @ vue.js:3094\r\n(anonymous) @ vue.js:1925\r\nflushCallbacks @ vue.js:1844\r\nPromise.then (async)\r\nmicroTimerFunc @ vue.js:1892\r\nnextTick @ vue.js:1938\r\nqueueWatcher @ vue.js:3186\r\nupdate @ vue.js:3326\r\nnotify @ vue.js:727\r\nmutator @ vue.js:879\r\ngoto_date @ lite.js:82\r\ninvoker @ vue.js:2128\r\nVue.$emit @ vue.js:2646\r\nVue.<computed> @ backend.js:1793\r\nsuccess @ select_year_trim.js:296\r\ntryCatcher @ -internal.js:39\r\ninvokeCallback @ -internal.js:211\r\npublish @ -internal.js:197\r\nflush @ asap.js:80\r\ncharacterData (async)\r\n(anonymous) @ asap.js:54\r\nasap @ asap.js:11\r\nfulfill @ -internal.js:148\r\nhandleMaybeThenable @ -internal.js:113\r\nresolve @ -internal.js:121\r\n(anonymous) @ -internal.js:241\r\n(anonymous) @ util.js:37\r\nRequest.callback @ superagent.js:1723\r\n(anonymous) @ superagent.js:1550\r\nEmitter.emit @ superagent.js:1080\r\nxhr.onreadystatechange @ superagent.js:1817\r\nXMLHttpRequest.send (async)\r\nRequest._end @ superagent.js:1884\r\nRequest.end @ superagent.js:1788\r\n(anonymous) @ util.js:34\r\ninitializePromise @ -internal.js:236\r\nPromise @ promise.js:142\r\nsuperagent.Request.promise @ util.js:33\r\ncommon_setup @ managers.js:33\r\nself.get_availability @ managers.js:163\r\nselect_car @ select_year_trim.js:272\r\nselect @ VM2579:1\r\ninvoker @ vue.js:2128\r\nVue.$emit @ vue.js:2646\r\nVue.<computed> @ backend.js:1793\r\nclick @ VM2609:3\r\ninvoker @ vue.js:2128\r\nVue.$emit @ vue.js:2646\r\nVue.<computed> @ backend.js:1793\r\nclick @ VBtn.ts:114\r\ninvoker @ vue.js:2128\r\nfn._withTask.fn._withTask @ vue.js:1913\r\n\r\nvue.js:1828 TypeError: Cannot read property 'name' of undefined\r\n    at Proxy.eval (eval at createFunction (vue.js:10785), <anonymous>:2:39)\r\n    at VueComponent.Vue._render (vue.js:4635)\r\n    at VueComponent.updateComponent (vue.js:2893)\r\n    at Watcher.get (vue.js:3261)\r\n    at new Watcher (vue.js:3250)\r\n    at mountComponent (vue.js:2900)\r\n    at VueComponent.Vue.$mount (vue.js:8642)\r\n    at VueComponent.Vue.$mount (vue.js:11045)\r\n    at init (vue.js:4225)\r\n    at createComponent (vue.js:5696)\r\n```\r\n\r\nWhile `TypeError: Cannot read property 'name' of undefined` and the template it occurred in is of course quite useful information it could be better if there are many references to 'name' in `<ASelectDate>` and the exact location of the error is not obvious. I'm proposing a feature enhancement that would include a line number relative to the template itself (assuming it is not just a render function) and also output the line before, the line of the error and the line following it from the source template to provide context information to the developer.\r\n\r\nI believe this can be achieved using the same techniques that are used in compilers when debugging information is enabled and generated. In development mode, as a template is compiled, context information is maintained (line numbers and the source lines of the template) and as each piece is compiled and converted into render function code this information is captured as \"debugging symbols\" (using compiler terms). If this debugging information is available when a render error occurs, the stack trace is examined and used with the debugging information to determine the line number and template lines to display with the warning.\r\n\r\nThe result would be an error report that looks something like:\r\n\r\n```\r\nvue.js:616 [Vue warn]: Error in render: \"TypeError: Cannot read property 'name' of undefined\"\r\n\r\nfound in\r\n\r\n---> <ASelectDate>\r\n       <ALite>\r\n         <TransitionGroup>\r\n           <DbNavigation>\r\n             <VContent>\r\n               <VApp>\r\n                 <Root>\r\n\r\non line 34\r\n\r\n        <p class=\"model-year\">{{ model.year }}</p>\r\n--->    <p class=\"model-name\">{{ model.name }}</p>\r\n        <p class=\"model-tagline\">{{ model.tag_line }}</p>\r\n\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nIn terms of implementation details, this feature would be enabled in development mode. The debugging information would be generated during template compilation and could be attached to the render function itself when compiled and emitted so that no additional files need to be produced, packaged or loaded. If the debugging information is available, the error message as envisioned above is produced. If not, the current style of warning is emitted instead along with a message that says for better details, reproduce the error in development mode.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10965",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10965/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10965/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10965/events",
      "html_url": "https://github.com/vuejs/vue/issues/10965",
      "id": 543811137,
      "node_id": "MDU6SXNzdWU1NDM4MTExMzc=",
      "number": 10965,
      "title": "Allow defining order in v-for",
      "user": {
        "login": "ybasefinal",
        "id": 5535801,
        "node_id": "MDQ6VXNlcjU1MzU4MDE=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5535801?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ybasefinal",
        "html_url": "https://github.com/ybasefinal",
        "followers_url": "https://api.github.com/users/ybasefinal/followers",
        "following_url": "https://api.github.com/users/ybasefinal/following{/other_user}",
        "gists_url": "https://api.github.com/users/ybasefinal/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ybasefinal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ybasefinal/subscriptions",
        "organizations_url": "https://api.github.com/users/ybasefinal/orgs",
        "repos_url": "https://api.github.com/users/ybasefinal/repos",
        "events_url": "https://api.github.com/users/ybasefinal/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ybasefinal/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        },
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-12-30T09:30:27Z",
      "updated_at": "2019-12-31T07:08:15Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nVue currently does not directly support reverse loops. Generally, it can be solved by using calculated attributes, but if you want to iterate over the objects in slotProps, the calculated attributes are not available (it is also possible that my usage is wrong). I hope there is a way that The method of traversing the array, so that you no longer need to create calculated properties for the array\r\n\r\n### What does the proposed API look like?\r\nConsider adding a property to v: for to specify the traversal direction\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10964",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10964/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10964/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10964/events",
      "html_url": "https://github.com/vuejs/vue/issues/10964",
      "id": 543787196,
      "node_id": "MDU6SXNzdWU1NDM3ODcxOTY=",
      "number": 10964,
      "title": "Event bubbling does not trigger on older iOS devices",
      "user": {
        "login": "chenjiahan",
        "id": 7237365,
        "node_id": "MDQ6VXNlcjcyMzczNjU=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7237365?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chenjiahan",
        "html_url": "https://github.com/chenjiahan",
        "followers_url": "https://api.github.com/users/chenjiahan/followers",
        "following_url": "https://api.github.com/users/chenjiahan/following{/other_user}",
        "gists_url": "https://api.github.com/users/chenjiahan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chenjiahan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chenjiahan/subscriptions",
        "organizations_url": "https://api.github.com/users/chenjiahan/orgs",
        "repos_url": "https://api.github.com/users/chenjiahan/repos",
        "events_url": "https://api.github.com/users/chenjiahan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chenjiahan/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 731090450,
          "node_id": "MDU6TGFiZWw3MzEwOTA0NTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/browser%20quirks",
          "name": "browser quirks",
          "color": "d93f0b",
          "default": false,
          "description": null
        },
        {
          "id": 79873474,
          "node_id": "MDU6TGFiZWw3OTg3MzQ3NA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/need%20repro",
          "name": "need repro",
          "color": "eb6420",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2019-12-30T08:01:00Z",
      "updated_at": "2020-01-02T12:50:01Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\nhttps://github.com/chenjiahan/vue-event-bubble-issue\r\n\r\n\r\n### Steps to reproduce\r\nThis is a browser quirk on iOS <= 11.3\r\n\r\n1. Find an old iOS device. (I reproduced the issue on an iOS 8.4 device)\r\n2. Binding click events on parent and child elements\r\n3. Click child element\r\n4. Event listener for parent element is not firing\r\n\r\n### What is expected?\r\nCorrect event bubbling behavior\r\n\r\n### What is actually happening?\r\nMobile safari has buggy event.timeStamp implementations, the value of event.timestamp is abnormal when the page is first loaded. But event.timestamp will return to normal value after refreshing the page.\r\n\r\nWe receive a lot of [feedback from vant users](https://github.com/youzan/vant/issues/3015), it is currently observed that the problem may occur on iOS 8.4、10.2、10.3、11.3 (mobile safari and wechat browser)\r\n\r\nScreenshot: \r\n![](https://img.yzcdn.cn/vant/vue-bubble-log-code.png)\r\n\r\n![](https://img.yzcdn.cn/vant/vue-bubble-log-info.jpeg)\r\n\r\n---\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10963",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10963/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10963/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10963/events",
      "html_url": "https://github.com/vuejs/vue/issues/10963",
      "id": 542885338,
      "node_id": "MDU6SXNzdWU1NDI4ODUzMzg=",
      "number": 10963,
      "title": "Problem with v-bind:class in Microsoft Edge for components",
      "user": {
        "login": "yamelkaya",
        "id": 2253928,
        "node_id": "MDQ6VXNlcjIyNTM5Mjg=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2253928?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yamelkaya",
        "html_url": "https://github.com/yamelkaya",
        "followers_url": "https://api.github.com/users/yamelkaya/followers",
        "following_url": "https://api.github.com/users/yamelkaya/following{/other_user}",
        "gists_url": "https://api.github.com/users/yamelkaya/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yamelkaya/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yamelkaya/subscriptions",
        "organizations_url": "https://api.github.com/users/yamelkaya/orgs",
        "repos_url": "https://api.github.com/users/yamelkaya/repos",
        "events_url": "https://api.github.com/users/yamelkaya/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yamelkaya/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 731090450,
          "node_id": "MDU6TGFiZWw3MzEwOTA0NTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/browser%20quirks",
          "name": "browser quirks",
          "color": "d93f0b",
          "default": false,
          "description": null
        },
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true,
          "description": null
        },
        {
          "id": 81203481,
          "node_id": "MDU6TGFiZWw4MTIwMzQ4MQ==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/contribution%20welcome",
          "name": "contribution welcome",
          "color": "009800",
          "default": false,
          "description": null
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-12-27T14:02:17Z",
      "updated_at": "2019-12-27T14:22:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/yamelkaya/pen/KKwvdrY](https://codepen.io/yamelkaya/pen/KKwvdrY)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen codepen example. There are 3 components `test-x` on the page which set text color and background. Each label tells about text color and background.\r\n\r\n\r\nChrome: everything works as expected \r\n\r\nEdge 18: 1st and 3rd labels have incorrect color\r\n\r\n### What is expected?\r\n1: red text on yellow bg\r\n2: red on gray\r\n3: black on yellow \r\n\r\n### What is actually happening?\r\n1: black on gray\r\n2: red on gray\r\n3: black on gray\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10946",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10946/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10946/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10946/events",
      "html_url": "https://github.com/vuejs/vue/issues/10946",
      "id": 541308437,
      "node_id": "MDU6SXNzdWU1NDEzMDg0Mzc=",
      "number": 10946,
      "title": "Inline style binding is NOT corporate with web standard",
      "user": {
        "login": "haochenli",
        "id": 14314849,
        "node_id": "MDQ6VXNlcjE0MzE0ODQ5",
        "avatar_url": "https://avatars3.githubusercontent.com/u/14314849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/haochenli",
        "html_url": "https://github.com/haochenli",
        "followers_url": "https://api.github.com/users/haochenli/followers",
        "following_url": "https://api.github.com/users/haochenli/following{/other_user}",
        "gists_url": "https://api.github.com/users/haochenli/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/haochenli/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haochenli/subscriptions",
        "organizations_url": "https://api.github.com/users/haochenli/orgs",
        "repos_url": "https://api.github.com/users/haochenli/repos",
        "events_url": "https://api.github.com/users/haochenli/events{/privacy}",
        "received_events_url": "https://api.github.com/users/haochenli/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-12-21T09:54:25Z",
      "updated_at": "2019-12-21T10:44:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/thirsty-heisenberg-elvz6?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/thirsty-heisenberg-elvz6?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. open the repo\r\n2. check the style of the green box\r\n\r\n### What is expected?\r\nThe green div's height should be 101px\r\n\r\n### What is actually happening?\r\nthe green div's height is 22px, cause inline style didn't work on this component\r\n\r\n---\r\nI check the web standard that if I assigned a string to a node's style with either `\"node.style.cssText\"` or add style directly in devtools with this `\"height: 100px; height:\" `,  the final height will be 100px. Obviously the invalid \"height: \" will be abandoned. \r\nThen I check the source code and find that the function `parseStyleText`  only uses regex to split the string and then assign it to result from value by value, no matter what the value is or if the value is valid. That is why the green box's height is incorrect.\r\nThen I create a PR try to fix this issue in web rendering but not in SSR.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10939",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10939/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10939/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10939/events",
      "html_url": "https://github.com/vuejs/vue/issues/10939",
      "id": 539807740,
      "node_id": "MDU6SXNzdWU1Mzk4MDc3NDA=",
      "number": 10939,
      "title": "Binding of events on dynamic components produce warnings",
      "user": {
        "login": "Zsavajji",
        "id": 6460348,
        "node_id": "MDQ6VXNlcjY0NjAzNDg=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/6460348?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zsavajji",
        "html_url": "https://github.com/Zsavajji",
        "followers_url": "https://api.github.com/users/Zsavajji/followers",
        "following_url": "https://api.github.com/users/Zsavajji/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zsavajji/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Zsavajji/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zsavajji/subscriptions",
        "organizations_url": "https://api.github.com/users/Zsavajji/orgs",
        "repos_url": "https://api.github.com/users/Zsavajji/repos",
        "events_url": "https://api.github.com/users/Zsavajji/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Zsavajji/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2019-12-18T17:05:36Z",
      "updated_at": "2019-12-27T01:20:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n\r\nhttps://jsfiddle.net/nueorsq5/\r\n\r\n\r\n\r\n### Steps to reproduce\r\nLoad page, the binding of native events produces warning on the <a> tag.\r\n\r\n### What is expected?\r\nShould not trigger warning, cause the component is dynamic and could be a component or a DOM node depending on the data passed.\r\n\r\n### What is actually happening?\r\nIt produces warning for every `.native` event bound to a DOM node.\r\n\r\n---\r\nThe warning is indeed correct, but makes difficult to create dynamic component with such events, since the object notation does not permit to specify native modifiers.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10926",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10926/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10926/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10926/events",
      "html_url": "https://github.com/vuejs/vue/issues/10926",
      "id": 536851319,
      "node_id": "MDU6SXNzdWU1MzY4NTEzMTk=",
      "number": 10926,
      "title": "slot fallback content is always rendered even when not used",
      "user": {
        "login": "houfeng0923",
        "id": 1825420,
        "node_id": "MDQ6VXNlcjE4MjU0MjA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1825420?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/houfeng0923",
        "html_url": "https://github.com/houfeng0923",
        "followers_url": "https://api.github.com/users/houfeng0923/followers",
        "following_url": "https://api.github.com/users/houfeng0923/following{/other_user}",
        "gists_url": "https://api.github.com/users/houfeng0923/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/houfeng0923/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/houfeng0923/subscriptions",
        "organizations_url": "https://api.github.com/users/houfeng0923/orgs",
        "repos_url": "https://api.github.com/users/houfeng0923/repos",
        "events_url": "https://api.github.com/users/houfeng0923/events{/privacy}",
        "received_events_url": "https://api.github.com/users/houfeng0923/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-12-12T09:19:48Z",
      "updated_at": "2019-12-12T11:44:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-test-default-slot-always-exec-syuny](https://codesandbox.io/s/vue-test-default-slot-always-exec-syuny)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen computed props or method  declared in slot fallback , looks like this: \r\n\r\n```\r\n// XXX component\r\n\r\n<slot>\r\n       no render, but always run {{p}}, {{print()}} <Func/> \r\n</slot>\r\n\r\n// use it \r\n<XXX>\r\n actual replaced content \r\n</XXX>\r\n```\r\n\r\n\r\n### What is expected?\r\ncomputed and method not  invoked , because they can't  render \r\n\r\n### What is actually happening?\r\ncomputed is invoked once change.\r\nmethod is invoked once render .\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10907",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10907/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10907/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10907/events",
      "html_url": "https://github.com/vuejs/vue/issues/10907",
      "id": 534596607,
      "node_id": "MDU6SXNzdWU1MzQ1OTY2MDc=",
      "number": 10907,
      "title": "Special spaces are replaced with a plain space",
      "user": {
        "login": "msklvsk",
        "id": 473012,
        "node_id": "MDQ6VXNlcjQ3MzAxMg==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/473012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/msklvsk",
        "html_url": "https://github.com/msklvsk",
        "followers_url": "https://api.github.com/users/msklvsk/followers",
        "following_url": "https://api.github.com/users/msklvsk/following{/other_user}",
        "gists_url": "https://api.github.com/users/msklvsk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/msklvsk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/msklvsk/subscriptions",
        "organizations_url": "https://api.github.com/users/msklvsk/orgs",
        "repos_url": "https://api.github.com/users/msklvsk/repos",
        "events_url": "https://api.github.com/users/msklvsk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/msklvsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-12-08T20:34:44Z",
      "updated_at": "2019-12-09T21:07:44Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/msklvsk/vue-space-replacement-bug](https://github.com/msklvsk/vue-space-replacement-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`yarn serve`\r\n\r\nThe repo was created by  `vue create vue-space-replacement-bug` and replacing `<div id=\"app\">` content with `<p>d&thinsp;b</p><p>d b</p>`\r\n\r\n### What is expected?\r\nThe space between the first ‘db’ pair is a [thin space](https://en.wikipedia.org/wiki/Thin_space) (code 8201).\r\n\r\n### What is actually happening?\r\nIt is a usual code-32 space. \r\n<img width=\"43\" alt=\"image\" src=\"https://user-images.githubusercontent.com/473012/70395689-f83d0d80-1a09-11ea-8067-a0d73c35ee97.png\">\r\n<img width=\"386\" alt=\"image\" src=\"https://user-images.githubusercontent.com/473012/70395768-d728ec80-1a0a-11ea-98cb-779616d844d9.png\">\r\n\r\n---\r\nHappens to other special spaces, e.g. for `&nbsp;`.\r\nNot sure if it’s a vue (compiler) or vue-cli problem.\r\nSetting the compiler option `whitespace` to `preserve` makes the symptoms go away.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10906",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10906/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10906/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10906/events",
      "html_url": "https://github.com/vuejs/vue/issues/10906",
      "id": 534572225,
      "node_id": "MDU6SXNzdWU1MzQ1NzIyMjU=",
      "number": 10906,
      "title": "v-once on template not working inside a v-for in two cases",
      "user": {
        "login": "posva",
        "id": 664177,
        "node_id": "MDQ6VXNlcjY2NDE3Nw==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/664177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/posva",
        "html_url": "https://github.com/posva",
        "followers_url": "https://api.github.com/users/posva/followers",
        "following_url": "https://api.github.com/users/posva/following{/other_user}",
        "gists_url": "https://api.github.com/users/posva/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/posva/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/posva/subscriptions",
        "organizations_url": "https://api.github.com/users/posva/orgs",
        "repos_url": "https://api.github.com/users/posva/repos",
        "events_url": "https://api.github.com/users/posva/events{/privacy}",
        "received_events_url": "https://api.github.com/users/posva/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true,
          "description": null
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-12-08T17:15:15Z",
      "updated_at": "2019-12-08T17:15:26Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/xiangyuecn/pen/eYmmPNP](https://codepen.io/xiangyuecn/pen/eYmmPNP)\r\n\r\nmoved from https://github.com/vuejs/vue/issues/10892\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nThe repro adds entries to an array, causing a re render that. The template intentionally displays the elapsed time to see which v-once work and which do not\r\n\r\n### What is expected?\r\n\r\nAll v-once to never render again\r\n\r\n### What is actually happening?\r\n\r\nTest 3 first template with a `v-once` re renders all the time. **Workaround** is to append an empty `span`: `<template v-once>[{{ getTime() }}] {{ obj.msg }}<span/></template>`\r\nTest 5: the second template with `v-once` still rerenders. **Workaround** is to use a different tag like a span or use the `v-once` on the parent.\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10903",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10903/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10903/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10903/events",
      "html_url": "https://github.com/vuejs/vue/issues/10903",
      "id": 534357757,
      "node_id": "MDU6SXNzdWU1MzQzNTc3NTc=",
      "number": 10903,
      "title": "When v-show render instruction is passed a reference object, the instruction will not work",
      "user": {
        "login": "SamirGuo",
        "id": 3691017,
        "node_id": "MDQ6VXNlcjM2OTEwMTc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3691017?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SamirGuo",
        "html_url": "https://github.com/SamirGuo",
        "followers_url": "https://api.github.com/users/SamirGuo/followers",
        "following_url": "https://api.github.com/users/SamirGuo/following{/other_user}",
        "gists_url": "https://api.github.com/users/SamirGuo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SamirGuo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SamirGuo/subscriptions",
        "organizations_url": "https://api.github.com/users/SamirGuo/orgs",
        "repos_url": "https://api.github.com/users/SamirGuo/repos",
        "events_url": "https://api.github.com/users/SamirGuo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SamirGuo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 9,
      "created_at": "2019-12-07T05:33:36Z",
      "updated_at": "2019-12-29T21:53:04Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/SamirGuo/pen/vYBezXz](https://codepen.io/SamirGuo/pen/vYBezXz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```html\r\n<div id=\"app\">\r\n<template>\r\n  <div>\r\n    <button @click=\"visible = !visible\">显示/隐藏</button>\r\n    <my-component :visible=\"visible\" style=\"border-bottom: solid 1px #ccc\" />\r\n  </div>\r\n</template>\r\n</div>\r\n```\r\n```js\r\nconst directive = {\r\n    name: 'show',\r\n    value: true\r\n};\r\n\r\nVue.component('MyComponent', {\r\n    props: {\r\n        mystyle: '',\r\n        visible: true\r\n    },\r\n    render(h) {\r\n        directive.value = this.visible;\r\n        return h('div', {\r\n            // do not work!\r\n            directives: [directive],\r\n            // work well!\r\n            // directives: [{\r\n            //     name: 'show',\r\n            //     value: this.visible\r\n            // }],\r\n            domProps: {\r\n                innerText: 'sssssss'\r\n            },\r\n            style: this.mystyle\r\n        });\r\n    }\r\n});\r\n\r\n\r\nvar Main = {\r\n    data() {\r\n      return { \r\n        visible: true\r\n      };\r\n    }\r\n  };\r\nvar Ctor = Vue.extend(Main)\r\nnew Ctor().$mount('#app')\r\n```\r\n### What is expected?\r\n\r\nv-show to be applied\r\n\r\n### What is actually happening?\r\n\r\nv-show isn't applied\r\n\r\n---\r\nWhen the instruction update logic assigns oldValue, oldVnode.data.directives [\"show\"] and vnode.data.directives [\"show\"] are actually the same object.\r\nSo dir.oldValue = oldDir.value is actually equivalent to dir.oldValue = dir.value; in the later update event, dir.oldValue === dir.value\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10878",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10878/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10878/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10878/events",
      "html_url": "https://github.com/vuejs/vue/issues/10878",
      "id": 530606493,
      "node_id": "MDU6SXNzdWU1MzA2MDY0OTM=",
      "number": 10878,
      "title": "support computed as arrow function in typescript",
      "user": {
        "login": "whbjzzwjxq",
        "id": 30146012,
        "node_id": "MDQ6VXNlcjMwMTQ2MDEy",
        "avatar_url": "https://avatars0.githubusercontent.com/u/30146012?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whbjzzwjxq",
        "html_url": "https://github.com/whbjzzwjxq",
        "followers_url": "https://api.github.com/users/whbjzzwjxq/followers",
        "following_url": "https://api.github.com/users/whbjzzwjxq/following{/other_user}",
        "gists_url": "https://api.github.com/users/whbjzzwjxq/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/whbjzzwjxq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/whbjzzwjxq/subscriptions",
        "organizations_url": "https://api.github.com/users/whbjzzwjxq/orgs",
        "repos_url": "https://api.github.com/users/whbjzzwjxq/repos",
        "events_url": "https://api.github.com/users/whbjzzwjxq/events{/privacy}",
        "received_events_url": "https://api.github.com/users/whbjzzwjxq/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-11-30T17:24:23Z",
      "updated_at": "2019-11-30T17:55:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\ntransform a project which has used lots of  ' xxx: vm => vm.prop ' as computed options to typescript easier\r\n\r\n### What does the proposed API look like?\r\nchange vue/types/options.d.ts type Accessors<T> to \r\n\r\n```ts\r\nexport type Accessors<T> = {\r\n  [K in keyof T]: (() => T[K]) | ComputedOptions<T[K]> | ((vm: any) => T[K])\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10871",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10871/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10871/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10871/events",
      "html_url": "https://github.com/vuejs/vue/issues/10871",
      "id": 529859325,
      "node_id": "MDU6SXNzdWU1Mjk4NTkzMjU=",
      "number": 10871,
      "title": "VNodeDirective expression Typing",
      "user": {
        "login": "WORMSS",
        "id": 1384537,
        "node_id": "MDQ6VXNlcjEzODQ1Mzc=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1384537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WORMSS",
        "html_url": "https://github.com/WORMSS",
        "followers_url": "https://api.github.com/users/WORMSS/followers",
        "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
        "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
        "organizations_url": "https://api.github.com/users/WORMSS/orgs",
        "repos_url": "https://api.github.com/users/WORMSS/repos",
        "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WORMSS/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 81203481,
          "node_id": "MDU6TGFiZWw4MTIwMzQ4MQ==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/contribution%20welcome",
          "name": "contribution welcome",
          "color": "009800",
          "default": false,
          "description": null
        },
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-11-28T11:35:18Z",
      "updated_at": "2019-12-06T08:33:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nCurrently the type for `expression` for `VNodeDirective` is optional any.\r\n\r\n```typescript\r\nexport interface VNodeDirective {\r\n  name: string;\r\n  value?: any;\r\n  oldValue?: any;\r\n  expression?: any;\r\n  arg?: string;\r\n  oldArg?: string;\r\n  modifiers?: { [key: string]: boolean };\r\n}\r\n```\r\n\r\nBut if I am understanding expression usage correctly, this is the string representation of what is passed into the \r\n```html\r\n<div v-my-directive=\"moose\"></div>\r\n```\r\nSo even though moose may be data or computer or something that returns `'not-moose'` value, the expression itself is `'moose'`.\r\n\r\nSo should this not be an optional string?\r\n\r\n```typescript\r\nexport interface VNodeDirective {\r\n  name: string;\r\n  value?: any;\r\n  oldValue?: any;\r\n  expression?: string;\r\n  arg?: string;\r\n  oldArg?: string;\r\n  modifiers?: { [key: string]: boolean };\r\n}\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10867",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10867/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10867/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10867/events",
      "html_url": "https://github.com/vuejs/vue/issues/10867",
      "id": 528619615,
      "node_id": "MDU6SXNzdWU1Mjg2MTk2MTU=",
      "number": 10867,
      "title": "Multiple arguments in custom event with a modifier are not passed to handler",
      "user": {
        "login": "osasson",
        "id": 35533588,
        "node_id": "MDQ6VXNlcjM1NTMzNTg4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/35533588?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/osasson",
        "html_url": "https://github.com/osasson",
        "followers_url": "https://api.github.com/users/osasson/followers",
        "following_url": "https://api.github.com/users/osasson/following{/other_user}",
        "gists_url": "https://api.github.com/users/osasson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/osasson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/osasson/subscriptions",
        "organizations_url": "https://api.github.com/users/osasson/orgs",
        "repos_url": "https://api.github.com/users/osasson/repos",
        "events_url": "https://api.github.com/users/osasson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/osasson/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true,
          "description": null
        },
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false,
          "description": ""
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-11-26T10:10:45Z",
      "updated_at": "2019-12-27T15:29:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/30115/](https://jsfiddle.net/50wL7mdz/30115/)\r\n\r\n### Steps to reproduce\r\nAdd a modifier to one of the event listeners. e.g. @emission.once\r\n\r\n### What is expected?\r\nThat all arguments will be passed to the function\r\n\r\n### What is actually happening?\r\nOnly the first argument is passed\r\n\r\n---\r\nMy guess is that it lies in the template compiler which creates a function($event){...}  and calling the handler with $event instead of ...arguments?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10866",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10866/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10866/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10866/events",
      "html_url": "https://github.com/vuejs/vue/issues/10866",
      "id": 528565825,
      "node_id": "MDU6SXNzdWU1Mjg1NjU4MjU=",
      "number": 10866,
      "title": "Class Binding Type Missing",
      "user": {
        "login": "WORMSS",
        "id": 1384537,
        "node_id": "MDQ6VXNlcjEzODQ1Mzc=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1384537?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WORMSS",
        "html_url": "https://github.com/WORMSS",
        "followers_url": "https://api.github.com/users/WORMSS/followers",
        "following_url": "https://api.github.com/users/WORMSS/following{/other_user}",
        "gists_url": "https://api.github.com/users/WORMSS/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WORMSS/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WORMSS/subscriptions",
        "organizations_url": "https://api.github.com/users/WORMSS/orgs",
        "repos_url": "https://api.github.com/users/WORMSS/repos",
        "events_url": "https://api.github.com/users/WORMSS/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WORMSS/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        },
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-11-26T08:30:02Z",
      "updated_at": "2019-11-26T11:15:19Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nWhen writing a computed property for a class binding, I found I couldn't type it for typescript.\r\nI made a temporary one and remembered, there are more possibilities, so instead of writing them myself, I thought best to use the built in ones.\r\nYet I can't seem to find a built in one. Am I being really dense and they are actually there right in front of my nose and I can't see them?\r\n\r\nAt any rate, I have wrote my own as \r\n```\r\nexport type VueClassBinding = string | readonly string[] | {\r\n  readonly [className: string]: boolean,\r\n};\r\n```\r\nAm I missing anything?\r\nIs it possible someone can add this to the typings?\r\n\r\n### What does the proposed API look like?\r\n```\r\n...\r\ncomputed: {\r\n  inputClassList(): VueClassBinding {\r\n    if ( Math.random() > .5 ) return 'my-class-name';\r\n    if ( Math.random() > .5 ) return ['my-class-name'];\r\n    return {\r\n      'my-class-name': true,\r\n    };\r\n  }\r\n}\r\n...\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10843",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10843/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10843/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10843/events",
      "html_url": "https://github.com/vuejs/vue/issues/10843",
      "id": 524994393,
      "node_id": "MDU6SXNzdWU1MjQ5OTQzOTM=",
      "number": 10843,
      "title": "Unexpected comma in the function declaration",
      "user": {
        "login": "roman-simionov",
        "id": 22078005,
        "node_id": "MDQ6VXNlcjIyMDc4MDA1",
        "avatar_url": "https://avatars2.githubusercontent.com/u/22078005?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/roman-simionov",
        "html_url": "https://github.com/roman-simionov",
        "followers_url": "https://api.github.com/users/roman-simionov/followers",
        "following_url": "https://api.github.com/users/roman-simionov/following{/other_user}",
        "gists_url": "https://api.github.com/users/roman-simionov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/roman-simionov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/roman-simionov/subscriptions",
        "organizations_url": "https://api.github.com/users/roman-simionov/orgs",
        "repos_url": "https://api.github.com/users/roman-simionov/repos",
        "events_url": "https://api.github.com/users/roman-simionov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/roman-simionov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true,
          "description": null
        },
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-11-19T12:59:54Z",
      "updated_at": "2019-11-19T18:53:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/dist/vue.esm.browser.js#L3296](https://github.com/vuejs/vue/blob/dev/dist/vue.esm.browser.js#L3296)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee the link https://github.com/vuejs/vue/blob/dev/dist/vue.esm.browser.js#L3296\r\n\r\n### What is expected?\r\nfunction createComponentInstanceForVnode (\r\n  vnode, // we know it's MountedComponentVNode but flow doesn't\r\n  parent // activeInstance in lifecycle state\r\n) {\r\n...\r\n}\r\n\r\n### What is actually happening?\r\nfunction createComponentInstanceForVnode (\r\n  vnode, // we know it's MountedComponentVNode but flow doesn't\r\n  parent, // activeInstance in lifecycle state\r\n) {\r\n...\r\n}\r\n\r\n---\r\nI've got an error when trying to add the vue.esm.browser.js file into a bundle using systemjs-builder\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10837",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10837/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10837/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10837/events",
      "html_url": "https://github.com/vuejs/vue/issues/10837",
      "id": 524299749,
      "node_id": "MDU6SXNzdWU1MjQyOTk3NDk=",
      "number": 10837,
      "title": "Duplicate data-v-* attribute with render function scopedSlot and scoped styles",
      "user": {
        "login": "thomasv",
        "id": 6152105,
        "node_id": "MDQ6VXNlcjYxNTIxMDU=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/6152105?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thomasv",
        "html_url": "https://github.com/thomasv",
        "followers_url": "https://api.github.com/users/thomasv/followers",
        "following_url": "https://api.github.com/users/thomasv/following{/other_user}",
        "gists_url": "https://api.github.com/users/thomasv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thomasv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thomasv/subscriptions",
        "organizations_url": "https://api.github.com/users/thomasv/orgs",
        "repos_url": "https://api.github.com/users/thomasv/repos",
        "events_url": "https://api.github.com/users/thomasv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thomasv/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-11-18T11:16:38Z",
      "updated_at": "2019-11-18T11:16:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/raWINce/nuxt-duplicate-data-v-attribute](https://github.com/raWINce/nuxt-duplicate-data-v-attribute)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- yarn install\r\n- yarn dev or yarn start\r\n- open localhost:3000\r\n\r\n\r\n### What is expected?\r\nCorrect html without duplicate attributes that is valid according to https://validator.w3.org\r\n\r\n### What is actually happening?\r\nThe div rendered inside the slot has a dupplicate data-v-* attribute. The html provided by the nuxt server is thus no valid html according to https://validator.w3.org\r\n\r\n![duplicate-data-attribute](https://user-images.githubusercontent.com/28686577/65216037-e0f81f00-daaf-11e9-9bb7-f659eb0017d4.png)\r\n\r\nThis behaviour only occurs, when\r\n\r\n- the parent of the component with the render function has scoped styles\r\n- the render function directly returns the slot: return this.$scopedSlots.default()\r\n- the child component has scoped styles and a slot\r\n\r\n\r\n---\r\nIn [vue-template-compiler/build.js#L4661](https://github.com/vuejs/vue/blob/2.6/packages/vue-template-compiler/build.js#L4661) it seems that there is no check for already existing scopeIds in the segments array.\r\n\r\nThis issue has been posted as a [nuxt issue](https://github.com/nuxt/nuxt.js/issues/6401), originally - see also [nuxt/nuxt.js#6401 (comment)](https://github.com/nuxt/nuxt.js/issues/6401#issuecomment-531604783) and a [vue-loader issue](https://github.com/vuejs/vue-loader/issues/1590) - see also [vuejs/vue-loader#1590 (comment)](https://github.com/vuejs/vue-loader/issues/1590#issuecomment-552943931)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10825",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10825/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10825/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10825/events",
      "html_url": "https://github.com/vuejs/vue/issues/10825",
      "id": 523020796,
      "node_id": "MDU6SXNzdWU1MjMwMjA3OTY=",
      "number": 10825,
      "title": "Allow accessing events registered via `vm.$on(...)` via a property, similar to `$listeners`",
      "user": {
        "login": "tmorehouse",
        "id": 2781561,
        "node_id": "MDQ6VXNlcjI3ODE1NjE=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/2781561?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tmorehouse",
        "html_url": "https://github.com/tmorehouse",
        "followers_url": "https://api.github.com/users/tmorehouse/followers",
        "following_url": "https://api.github.com/users/tmorehouse/following{/other_user}",
        "gists_url": "https://api.github.com/users/tmorehouse/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tmorehouse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tmorehouse/subscriptions",
        "organizations_url": "https://api.github.com/users/tmorehouse/orgs",
        "repos_url": "https://api.github.com/users/tmorehouse/repos",
        "events_url": "https://api.github.com/users/tmorehouse/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tmorehouse/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2019-11-14T18:08:17Z",
      "updated_at": "2019-11-15T19:20:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\n\r\nCurrently, if an event is registered via `vm.$on('event-name', handler)`, it does not appear in the `this.$listeners` object (Vue 2.6.x)\r\n\r\nIn some instances you only want to handle the event processing if there is indeed a listener registered (for performance reasons).  But when component event listeners are registered programatically via `this.$on` (or `vmReference.$on`) it is not currently possible to see them in `this.$listeners`, e.g.:\r\n\r\n```js\r\nif (this.$listeners['event-name']) {\r\n  // Do something computationally intensive\r\n  // then emit event\r\n  this.$emit('event-name', resultOfComputation)\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/2781561/68885711-1013c100-06ec-11ea-8c4b-a447d3612629.png)\r\n\r\n### What does the proposed API look like?\r\n\r\nNo new API for the public.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10812",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10812/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10812/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10812/events",
      "html_url": "https://github.com/vuejs/vue/issues/10812",
      "id": 520256392,
      "node_id": "MDU6SXNzdWU1MjAyNTYzOTI=",
      "number": 10812,
      "title": "vue-template-compiler module types do not express the correct optional properties",
      "user": {
        "login": "emensch",
        "id": 910942,
        "node_id": "MDQ6VXNlcjkxMDk0Mg==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/910942?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emensch",
        "html_url": "https://github.com/emensch",
        "followers_url": "https://api.github.com/users/emensch/followers",
        "following_url": "https://api.github.com/users/emensch/following{/other_user}",
        "gists_url": "https://api.github.com/users/emensch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/emensch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emensch/subscriptions",
        "organizations_url": "https://api.github.com/users/emensch/orgs",
        "repos_url": "https://api.github.com/users/emensch/repos",
        "events_url": "https://api.github.com/users/emensch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/emensch/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-11-08T22:07:19Z",
      "updated_at": "2019-11-09T14:25:34Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-compiler-module-type-bug-wl0wn](https://codesandbox.io/s/vue-template-compiler-module-type-bug-wl0wn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIssue is surfaced by CodeSandbox' typescript linter - just load the sandbox.\r\n\r\n\r\n### What is expected?\r\nvue-template-compiler should accept modules with **0 or more** of the following properties:\r\n- `preTransformNode`\r\n- `transformNode`\r\n- `postTransformNode`\r\n- `genData`\r\n\r\n### What is actually happening?\r\nvue-template-compiler _requires_ modules to have all `transform` functions and `genData` defined. \r\n\r\n![codesandbox typescript error](https://puu.sh/ECk1R/7a7236e09e.png)\r\n\r\n---\r\nRan into this while developing a custom template compiler module. It doesn't effect output or compiler functionality in any way, but it does impact developer experience.\r\n\r\nFixed by #10743\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10805",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10805/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10805/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10805/events",
      "html_url": "https://github.com/vuejs/vue/issues/10805",
      "id": 518973836,
      "node_id": "MDU6SXNzdWU1MTg5NzM4MzY=",
      "number": 10805,
      "title": "Computed Setter Does Not Work In Scoped Slot",
      "user": {
        "login": "pxwee5",
        "id": 14123790,
        "node_id": "MDQ6VXNlcjE0MTIzNzkw",
        "avatar_url": "https://avatars0.githubusercontent.com/u/14123790?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pxwee5",
        "html_url": "https://github.com/pxwee5",
        "followers_url": "https://api.github.com/users/pxwee5/followers",
        "following_url": "https://api.github.com/users/pxwee5/following{/other_user}",
        "gists_url": "https://api.github.com/users/pxwee5/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pxwee5/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pxwee5/subscriptions",
        "organizations_url": "https://api.github.com/users/pxwee5/orgs",
        "repos_url": "https://api.github.com/users/pxwee5/repos",
        "events_url": "https://api.github.com/users/pxwee5/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pxwee5/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-11-07T00:48:35Z",
      "updated_at": "2019-11-07T10:15:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/jameswee/pen/BaaxLmE](https://codepen.io/jameswee/pen/BaaxLmE)\r\n\r\n### Steps to reproduce\r\n1. Create computed setter in parent and pass it into scoped slot\r\n2. Attach computed setter via scoped slot into child's v-model\r\n3. Test\r\n\r\nA working example is available if you comment out line 2 and uncomment line 3. \r\n\r\n### What is expected?\r\nEditing the input box should trigger the alert function\r\n\r\n### What is actually happening?\r\nEditing input box isn't triggering the computed setter.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10803",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10803/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10803/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10803/events",
      "html_url": "https://github.com/vuejs/vue/issues/10803",
      "id": 518527074,
      "node_id": "MDU6SXNzdWU1MTg1MjcwNzQ=",
      "number": 10803,
      "title": "SSR: textarea domProps keeps falsy values",
      "user": {
        "login": "KaelWD",
        "id": 16421948,
        "node_id": "MDQ6VXNlcjE2NDIxOTQ4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/16421948?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KaelWD",
        "html_url": "https://github.com/KaelWD",
        "followers_url": "https://api.github.com/users/KaelWD/followers",
        "following_url": "https://api.github.com/users/KaelWD/following{/other_user}",
        "gists_url": "https://api.github.com/users/KaelWD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KaelWD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KaelWD/subscriptions",
        "organizations_url": "https://api.github.com/users/KaelWD/orgs",
        "repos_url": "https://api.github.com/users/KaelWD/repos",
        "events_url": "https://api.github.com/users/KaelWD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KaelWD/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true,
          "description": null
        },
        {
          "id": 1223041354,
          "node_id": "MDU6TGFiZWwxMjIzMDQxMzU0",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feat:ssr",
          "name": "feat:ssr",
          "color": "aca0ef",
          "default": false,
          "description": ""
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-11-06T14:59:35Z",
      "updated_at": "2019-11-08T08:02:42Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/codesandbox-nuxt-vdcv8](https://codesandbox.io/s/codesandbox-nuxt-vdcv8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nView page source\r\n\r\n### What is expected?\r\n```html\r\n<textarea id=\"input-62\" rows=\"5\"></textarea>\r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<textarea id=\"input-62\" rows=\"5\">null</textarea>\r\n```\r\n\r\n---\r\nSimilar to #9231\r\n\r\nRepro in `vue/test/ssr/ssr-string.spec.js`:\r\n```js\r\n  it('falsy domProps value', done => {\r\n    renderVmWithOptions({\r\n      render (h) {\r\n        return h('div', [\r\n          h('textarea', {\r\n            domProps: {\r\n              value: null\r\n            }\r\n          })\r\n        ])\r\n      }\r\n    }, result => {\r\n      expect(result).toContain(\r\n        '<div data-server-rendered=\"true\"><textarea></textarea></div>'\r\n      )\r\n      done()\r\n    })\r\n  })\r\n```\r\n\r\nRelevant vuetify code:\r\nhttps://github.com/vuetifyjs/vuetify/blob/243a7c34a1c58dff3753ad35dded13ba5002c8eb/packages/vuetify/src/components/VTextarea/VTextarea.ts#L86-L92\r\nhttps://github.com/vuetifyjs/vuetify/blob/243a7c34a1c58dff3753ad35dded13ba5002c8eb/packages/vuetify/src/components/VTextField/VTextField.ts#L357-L361\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10786",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10786/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10786/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10786/events",
      "html_url": "https://github.com/vuejs/vue/issues/10786",
      "id": 515535591,
      "node_id": "MDU6SXNzdWU1MTU1MzU1OTE=",
      "number": 10786,
      "title": "Trigger a warning when v-show and other incompatible directives are used on <template>",
      "user": {
        "login": "mrleblanc101",
        "id": 17392251,
        "node_id": "MDQ6VXNlcjE3MzkyMjUx",
        "avatar_url": "https://avatars3.githubusercontent.com/u/17392251?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mrleblanc101",
        "html_url": "https://github.com/mrleblanc101",
        "followers_url": "https://api.github.com/users/mrleblanc101/followers",
        "following_url": "https://api.github.com/users/mrleblanc101/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrleblanc101/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mrleblanc101/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrleblanc101/subscriptions",
        "organizations_url": "https://api.github.com/users/mrleblanc101/orgs",
        "repos_url": "https://api.github.com/users/mrleblanc101/repos",
        "events_url": "https://api.github.com/users/mrleblanc101/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mrleblanc101/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false,
          "description": null
        },
        {
          "id": 1067199686,
          "node_id": "MDU6TGFiZWwxMDY3MTk5Njg2",
          "url": "https://api.github.com/repos/vuejs/vue/labels/warnings",
          "name": "warnings",
          "color": "8745ad",
          "default": false,
          "description": "related to development warnings"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-10-31T15:41:23Z",
      "updated_at": "2019-10-31T20:03:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nHi,\r\n\r\nI lost quite some time trying to figure out when my code didn't work.\r\nThe error was on my part, not vue, but i think Vue should trigger an error in this case.\r\n\r\nThe problem is that you CANNOT use `v-show` on a `<template>` tag, which make sense since `v-show` add inline style to the node and the `<template>` tag does not render a node.\r\n\r\n### What does the proposed API look like?\r\nA Vue warning/error should suggest changing the `v-if` (if possible) or change the `<template>` tag for a DOM element (like a `<div>`)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10780",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10780/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10780/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10780/events",
      "html_url": "https://github.com/vuejs/vue/issues/10780",
      "id": 514666921,
      "node_id": "MDU6SXNzdWU1MTQ2NjY5MjE=",
      "number": 10780,
      "title": "ssr renderScripts don't support custom attributes",
      "user": {
        "login": "hxlniada",
        "id": 3838586,
        "node_id": "MDQ6VXNlcjM4Mzg1ODY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/3838586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hxlniada",
        "html_url": "https://github.com/hxlniada",
        "followers_url": "https://api.github.com/users/hxlniada/followers",
        "following_url": "https://api.github.com/users/hxlniada/following{/other_user}",
        "gists_url": "https://api.github.com/users/hxlniada/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hxlniada/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hxlniada/subscriptions",
        "organizations_url": "https://api.github.com/users/hxlniada/orgs",
        "repos_url": "https://api.github.com/users/hxlniada/repos",
        "events_url": "https://api.github.com/users/hxlniada/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hxlniada/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-10-30T13:25:00Z",
      "updated_at": "2019-10-31T09:45:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/build.dev.js#L9041](https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/build.dev.js#L9041)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nsee the code，it's hard coded to\r\n```\r\nreturn (\"<script src=\\\"\"   (this$1.publicPath)   file   \"\\\" defer></script>\")\r\n```\r\n\r\n### What is expected?\r\nrenderScripts with configuable attributes\r\n\r\n\r\n### What is actually happening?\r\nIt's hard coded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10778",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10778/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10778/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10778/events",
      "html_url": "https://github.com/vuejs/vue/issues/10778",
      "id": 514320573,
      "node_id": "MDU6SXNzdWU1MTQzMjA1NzM=",
      "number": 10778,
      "title": "Add non-passive event modifier",
      "user": {
        "login": "tobyzerner",
        "id": 128862,
        "node_id": "MDQ6VXNlcjEyODg2Mg==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/128862?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tobyzerner",
        "html_url": "https://github.com/tobyzerner",
        "followers_url": "https://api.github.com/users/tobyzerner/followers",
        "following_url": "https://api.github.com/users/tobyzerner/following{/other_user}",
        "gists_url": "https://api.github.com/users/tobyzerner/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tobyzerner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tobyzerner/subscriptions",
        "organizations_url": "https://api.github.com/users/tobyzerner/orgs",
        "repos_url": "https://api.github.com/users/tobyzerner/repos",
        "events_url": "https://api.github.com/users/tobyzerner/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tobyzerner/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-10-30T00:43:58Z",
      "updated_at": "2019-11-20T14:58:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nAn event modifier to support `passive` events was added in #5132.\r\n\r\nIn the last couple of years, browsers have adopted the `passive` behavior by default for `touchstart` and `touchmove` events ([reference](https://www.fxsitecompat.dev/en-CA/docs/2018/touch-event-listeners-are-now-passive-by-default-making-scrolling-faster-on-mobile/)). Thus, to be able to cancel one of these events by calling `e.preventDefault()`, you need to explicitly pass `{ passive: false }` when adding the event listener.\r\n\r\nWith the current API this is impossible to achieve in a Vue template (as far as I can tell). You must manually add and remove the event listener in a component hook like so:\r\n\r\n```js\r\nthis.$refs.someElement.addEventListener('touchstart', this.start, { passive: false });\r\nthis.$refs.someElement.addEventListener('touchmove', this.move, { passive: false });\r\n\r\n// later\r\nthis.$refs.someElement.removeEventListener('touchstart', this.start);\r\nthis.$refs.someElement.removeEventListener('touchmove', this.move);\r\n```\r\n\r\n### What does the proposed API look like?\r\nAn event modifier that does the opposite of the `passive` event modifier, specifying the option as `false` instead of `true`.\r\n\r\nUnsure of the naming - perhaps `nonPassive`, `active`, `assertive`, `intentional`.\r\n\r\n```html\r\n<div\r\n  @touchstart.active=\"start\"\r\n  @touchmove.active=\"move\"\r\n></div>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10776",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10776/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10776/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10776/events",
      "html_url": "https://github.com/vuejs/vue/issues/10776",
      "id": 513710730,
      "node_id": "MDU6SXNzdWU1MTM3MTA3MzA=",
      "number": 10776,
      "title": "Property '$options' does not exist on type 'VueConstructor<Vue>'.",
      "user": {
        "login": "zsluedem",
        "id": 13496262,
        "node_id": "MDQ6VXNlcjEzNDk2MjYy",
        "avatar_url": "https://avatars0.githubusercontent.com/u/13496262?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zsluedem",
        "html_url": "https://github.com/zsluedem",
        "followers_url": "https://api.github.com/users/zsluedem/followers",
        "following_url": "https://api.github.com/users/zsluedem/following{/other_user}",
        "gists_url": "https://api.github.com/users/zsluedem/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zsluedem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zsluedem/subscriptions",
        "organizations_url": "https://api.github.com/users/zsluedem/orgs",
        "repos_url": "https://api.github.com/users/zsluedem/repos",
        "events_url": "https://api.github.com/users/zsluedem/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zsluedem/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-10-29T06:01:25Z",
      "updated_at": "2019-10-29T19:21:35Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jafbudpk/3/#&togetherjs=HlrrSLGnsb](https://jsfiddle.net/jafbudpk/3/#&togetherjs=HlrrSLGnsb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nimport Vue, { PluginFunction } from 'vue';\r\ninterface PluginOptions {}\r\n\r\nexport const Plugin: PluginFunction<PluginOptions> = function Plugin(Vue, PluginOptions): void {\r\n  Vue.mixin({\r\n    created() {\r\n      this.$options.socket = 1;\r\n    }\r\n  });\r\n};\r\n\r\n```\r\n\r\n### What is expected?\r\nThe `$option` should be already type right.\r\n\r\n### What is actually happening?\r\n  Property '$options' does not exist on type 'VueConstructor<Vue>'.ts(2339)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10762",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10762/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10762/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10762/events",
      "html_url": "https://github.com/vuejs/vue/issues/10762",
      "id": 512654608,
      "node_id": "MDU6SXNzdWU1MTI2NTQ2MDg=",
      "number": 10762,
      "title": "Computed properties with getter/setter do not provide expected Typescript type annotation",
      "user": {
        "login": "EvanSanderson",
        "id": 19613745,
        "node_id": "MDQ6VXNlcjE5NjEzNzQ1",
        "avatar_url": "https://avatars1.githubusercontent.com/u/19613745?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/EvanSanderson",
        "html_url": "https://github.com/EvanSanderson",
        "followers_url": "https://api.github.com/users/EvanSanderson/followers",
        "following_url": "https://api.github.com/users/EvanSanderson/following{/other_user}",
        "gists_url": "https://api.github.com/users/EvanSanderson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/EvanSanderson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/EvanSanderson/subscriptions",
        "organizations_url": "https://api.github.com/users/EvanSanderson/orgs",
        "repos_url": "https://api.github.com/users/EvanSanderson/repos",
        "events_url": "https://api.github.com/users/EvanSanderson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/EvanSanderson/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-10-25T18:24:55Z",
      "updated_at": "2019-10-31T10:47:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/quiet-glitter-qk7fy?fontsize=14](https://codesandbox.io/s/quiet-glitter-qk7fy?fontsize=14)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Create a computed property in a single file component that is lang=\"ts\" - call it myComputedProp\r\n\r\n2) Add a get() and set() method for that computed prop\r\n\r\n3) Annotate the get() method (for example get(): string)\r\n\r\n4) Annotate the set() method (for example set(myValue: number): void ) \r\n\r\n5) Check the inferred types of myComputedProp - it looks like it will be string | number\r\n\r\n### What is expected?\r\nWhen the get() method of a computed property is annotated with a type, the computed properties type will correspond to that annotation. \r\n\r\n### What is actually happening?\r\nWhen the get() method of a computed property is annotated with a type (A), and the set() methods parameter has been annotated with a type as well (B), the computed property has a type of A | B\r\n\r\n---\r\nThis may very well be a user error on our part as well, and perhaps the community or Vue team has some suggestions for how to better handle this. We provide auto generated types from an api client, so having the \"or\" syntax with the computed annotation in this case means we need to use a type assertion to circumvent this. Thanks a ton! Happy to provide screenshots I took as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10742",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10742/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10742/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10742/events",
      "html_url": "https://github.com/vuejs/vue/issues/10742",
      "id": 510293068,
      "node_id": "MDU6SXNzdWU1MTAyOTMwNjg=",
      "number": 10742,
      "title": "Vue purposely removes vendor prefixes when using style binding",
      "user": {
        "login": "WisdomSky",
        "id": 6792172,
        "node_id": "MDQ6VXNlcjY3OTIxNzI=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/6792172?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/WisdomSky",
        "html_url": "https://github.com/WisdomSky",
        "followers_url": "https://api.github.com/users/WisdomSky/followers",
        "following_url": "https://api.github.com/users/WisdomSky/following{/other_user}",
        "gists_url": "https://api.github.com/users/WisdomSky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/WisdomSky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/WisdomSky/subscriptions",
        "organizations_url": "https://api.github.com/users/WisdomSky/orgs",
        "repos_url": "https://api.github.com/users/WisdomSky/repos",
        "events_url": "https://api.github.com/users/WisdomSky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/WisdomSky/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-10-21T21:05:19Z",
      "updated_at": "2019-10-21T23:52:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/80o2ef9w/](https://jsfiddle.net/80o2ef9w/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate an element and add style binding:\r\n\r\n    <div :style=\"{'-webkit-clip-path': 'some values'}\">example</div>\r\n\r\n### What is expected?\r\n    <div style=\"-webkit-clip-path: some values\">example</div>\r\n\r\n### What is actually happening?\r\n    <div style=\"clip-path: some values\">example</div>\r\n\r\n---\r\nIn the docs, it is stated that Vue supposedly automatically adds vendor prefixes to CSS properties if it needs them, but not for `clip-path`. In Safari, the `-webkit-` prefix is required to be specified in order for it to work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/10739",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/10739/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/10739/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/10739/events",
      "html_url": "https://github.com/vuejs/vue/issues/10739",
      "id": 509926710,
      "node_id": "MDU6SXNzdWU1MDk5MjY3MTA=",
      "number": 10739,
      "title": "There is no a attribute like react's $$typeof to prevent XSS injection in the vnode of Vue.",
      "user": {
        "login": "ddosakura",
        "id": 26789963,
        "node_id": "MDQ6VXNlcjI2Nzg5OTYz",
        "avatar_url": "https://avatars0.githubusercontent.com/u/26789963?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ddosakura",
        "html_url": "https://github.com/ddosakura",
        "followers_url": "https://api.github.com/users/ddosakura/followers",
        "following_url": "https://api.github.com/users/ddosakura/following{/other_user}",
        "gists_url": "https://api.github.com/users/ddosakura/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ddosakura/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ddosakura/subscriptions",
        "organizations_url": "https://api.github.com/users/ddosakura/orgs",
        "repos_url": "https://api.github.com/users/ddosakura/repos",
        "events_url": "https://api.github.com/users/ddosakura/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ddosakura/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 5,
      "created_at": "2019-10-21T12:21:00Z",
      "updated_at": "2019-10-26T04:55:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n\r\n\r\n### Reproduction link\r\n[https://codepen.io/ddosakura/pen/eYYgYqZ](https://codepen.io/ddosakura/pen/eYYgYqZ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nvue 的 vnode 中，没有一个类似 react 的 $$typeof 属性来防止 XSS 注入。\r\n\r\n```js\r\nconst inject = {\r\n  tag: \"div\",\r\n  children: [\r\n    {\r\n      text: \"injecting\"\r\n    }\r\n  ]\r\n}\r\nconst no_inject = \"no_inject\"\r\n\r\nconst InjectTest = () => {\r\n  return <div>\r\n    { inject }\r\n    { no_inject }\r\n  </div>\r\n}\r\n```\r\n\r\n### What is expected?\r\n希望像 React 中一样，在 vnode 中添加类似 $$typeof 的 Symbol 属性来防止 XSS 注入。\r\n\r\n### What is actually happening?\r\n一个伪造的 vnode 对象，会被正常渲染成 dom。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->",
      "score": 1.0
    }
  ]
}
